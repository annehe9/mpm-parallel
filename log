mkdir -p obj
g++ -std=c++11 -O3 -Wall -Wno-deprecated -pedantic -Wno-vla-extension  -I./include -I./src -DNDEBUG -c src/helper.cpp -o obj/helper.o
In file included from ./src/eigen3/Eigen/Core:369:0,
                 from ./src/eigen3/Eigen/Dense:1,
                 from src/helper.h:8,
                 from src/helper.cpp:1:
./src/eigen3/Eigen/src/Core/GeneralProduct.h: In instantiation of ‘const Eigen::Product<Derived, OtherDerived> Eigen::MatrixBase<Derived>::operator*(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Transpose<Eigen::Matrix<double, 2, 2> >; Derived = Eigen::Matrix<double, 2, 1>]’:
src/helper.cpp:138:40:   required from here
./src/eigen3/Eigen/src/Core/util/StaticAssert.h:33:40: error: static assertion failed: INVALID_MATRIX_PRODUCT
     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
                                        ^
./src/eigen3/Eigen/src/Core/GeneralProduct.h:410:3: note: in expansion of macro ‘EIGEN_STATIC_ASSERT’
   EIGEN_STATIC_ASSERT(ProductIsValid || SameSizes, INVALID_MATRIX_PRODUCT)
   ^
./src/eigen3/Eigen/src/Core/GeneralProduct.h: In instantiation of ‘const Eigen::Product<Derived, OtherDerived, 1> Eigen::MatrixBase<Derived>::lazyProduct(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Transpose<Eigen::Matrix<double, 2, 2> >; Derived = Eigen::Matrix<double, 2, 1>]’:
./src/eigen3/Eigen/src/Core/ProductEvaluators.h:397:107:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<double, 2, 2>; Lhs = Eigen::Matrix<double, 2, 1>; Rhs = Eigen::Transpose<Eigen::Matrix<double, 2, 2> >]’
./src/eigen3/Eigen/src/Core/ProductEvaluators.h:148:69:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<double, 2, 2>; Lhs = Eigen::Matrix<double, 2, 1>; Rhs = Eigen::Transpose<Eigen::Matrix<double, 2, 2> >; int Options = 0; Scalar = double; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == DefaultProduct) || (Options == AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Matrix<double, 2, 1>, Eigen::Transpose<Eigen::Matrix<double, 2, 2> >, 0>]’
./src/eigen3/Eigen/src/Core/AssignEvaluator.h:836:70:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 2, 2>; Src = Eigen::Product<Eigen::Matrix<double, 2, 1>, Eigen::Transpose<Eigen::Matrix<double, 2, 2> >, 0>; Func = Eigen::internal::assign_op<double, double>]’
./src/eigen3/Eigen/src/Core/PlainObjectBase.h:732:135:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<double, 2, 1>, Eigen::Transpose<Eigen::Matrix<double, 2, 2> >, 0>; Derived = Eigen::Matrix<double, 2, 2>]’
./src/eigen3/Eigen/src/Core/PlainObjectBase.h:818:7:   required from ‘void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<double, 2, 1>, Eigen::Transpose<Eigen::Matrix<double, 2, 2> >, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<double, 2, 1>, Eigen::Transpose<Eigen::Matrix<double, 2, 2> >, 0>; Derived = Eigen::Matrix<double, 2, 2>]’
./src/eigen3/Eigen/src/Core/Matrix.h:294:33:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
./src/eigen3/Eigen/src/Core/Matrix.h:294:33:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Product<Eigen::Matrix<double, 2, 1>, Eigen::Transpose<Eigen::Matrix<double, 2, 2> >, 0>, Eigen::Matrix<double, 2, 2>, 0>; _Scalar = double; int _Rows = 2; int _Cols = 2; int _Options = 0; int _MaxRows = 2; int _MaxCols = 2]’
./src/eigen3/Eigen/src/Core/AssignEvaluator.h:796:48:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Matrix<double, 2, 2>; Src = Eigen::Product<Eigen::Product<Eigen::Matrix<double, 2, 1>, Eigen::Transpose<Eigen::Matrix<double, 2, 2> >, 0>, Eigen::Matrix<double, 2, 2>, 0>; Func = Eigen::internal::assign_op<double, double>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
./src/eigen3/Eigen/src/Core/AssignEvaluator.h:782:93:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<double, 2, 2>; Src = Eigen::Product<Eigen::Product<Eigen::Matrix<double, 2, 1>, Eigen::Transpose<Eigen::Matrix<double, 2, 2> >, 0>, Eigen::Matrix<double, 2, 2>, 0>]’
./src/eigen3/Eigen/src/Core/PlainObjectBase.h:714:65:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Matrix<double, 2, 1>, Eigen::Transpose<Eigen::Matrix<double, 2, 2> >, 0>, Eigen::Matrix<double, 2, 2>, 0>; Derived = Eigen::Matrix<double, 2, 2>]’
./src/eigen3/Eigen/src/Core/Matrix.h:225:30:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Matrix<double, 2, 1>, Eigen::Transpose<Eigen::Matrix<double, 2, 2> >, 0>, Eigen::Matrix<double, 2, 2>, 0>; _Scalar = double; int _Rows = 2; int _Cols = 2; int _Options = 0; int _MaxRows = 2; int _MaxCols = 2]’
src/helper.cpp:138:13:   required from here
./src/eigen3/Eigen/src/Core/util/StaticAssert.h:33:40: error: static assertion failed: INVALID_MATRIX_PRODUCT
     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);
                                        ^
./src/eigen3/Eigen/src/Core/GeneralProduct.h:448:3: note: in expansion of macro ‘EIGEN_STATIC_ASSERT’
   EIGEN_STATIC_ASSERT(ProductIsValid || SameSizes, INVALID_MATRIX_PRODUCT)
   ^
cc1plus: warning: unrecognized command line option "-Wno-vla-extension" [enabled by default]
make: *** [obj/helper.o] Error 1
